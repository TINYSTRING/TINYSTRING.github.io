<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hello World</title>
    <url>/2023/11/04/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a class="link"   href="https://hexo.io/" >Hexo <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>! This is your very first post. Check <a class="link"   href="https://hexo.io/docs/" >documentation <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> for more info. If you get any problems when using Hexo, you can find the answer in <a class="link"   href="https://hexo.io/docs/troubleshooting.html" >troubleshooting <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> or you can ask me on <a class="link"   href="https://github.com/hexojs/hexo/issues" >GitHub <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure></div>

<p>More info: <a class="link"   href="https://hexo.io/docs/writing.html" >Writing <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure></div>

<p>More info: <a class="link"   href="https://hexo.io/docs/server.html" >Server <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure></div>

<p>More info: <a class="link"   href="https://hexo.io/docs/generating.html" >Generating <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure></div>

<p>More info: <a class="link"   href="https://hexo.io/docs/one-command-deployment.html" >Deployment <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
]]></content>
  </entry>
  <entry>
    <title>篝火（小丑）晚会</title>
    <url>/2023/11/05/gonghuo/</url>
    <content><![CDATA[<h1 id="洛谷"><a href="#洛谷" class="headerlink" title="洛谷"></a>洛谷</h1><h2 id="篝火（小丑）晚会"><a href="#篝火（小丑）晚会" class="headerlink" title="篝火（小丑）晚会"></a>篝火（小丑）晚会</h2><h3 id="明明斯窝线莱德，怎么会？（败犬哭泣-）"><a href="#明明斯窝线莱德，怎么会？（败犬哭泣-）" class="headerlink" title="明明斯窝线莱德，怎么会？（败犬哭泣~~）"></a>明明斯窝线莱德，怎么会？（败犬哭泣~~）</h3><h1 id="NOIP2005-提高组-篝火晚会"><a href="#NOIP2005-提高组-篝火晚会" class="headerlink" title="[NOIP2005 提高组] 篝火晚会"></a>[NOIP2005 提高组] 篝火晚会</h1><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>佳佳刚进高中，在军训的时候，由于佳佳吃苦耐劳，很快得到了教官的赏识，成为了“小教官”。在军训结束的那天晚上，佳佳被命令组织同学们进行篝火晚会。一共有 $n$ 个同学，编号从 $1$ 到 $n$。一开始，同学们按照 $1,2,\cdots ,n$ 的顺序坐成一圈，而实际上每个人都有两个最希望相邻的同学。如何下命令调整同学的次序，形成新的一个圈，使之符合同学们的意愿，成为摆在佳佳面前的一大难题。</p>
<p>佳佳可向同学们下达命令，每一个命令的形式如下：</p>
<p>$$(b_1, b_2,… b_{m-1}, b_m)$$</p>
<p>这里 $m$ 的值是由佳佳决定的，每次命令 $m$ 的值都可以不同。这个命令的作用是移动编号是 $b_1,b_2,\cdots, b_m$ 的这 $m$ 个同学的位置。要求 $b_1$ 换到 $b_2$ 的位置上，$b_2$ 换到 $b_3$ 的位置上，……，要求 $b_m$ 换到 $b_1$ 的位置上。执行每个命令都需要一些代价。我们假定如果一个命令要移动 $m$ 个人的位置，那么这个命令的代价就是 $m$。我们需要佳佳用最少的总代价实现同学们的意愿，你能帮助佳佳吗？</p>
<h2 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h2><p>第一行是一个整数 $n$，表示一共有 $n$ 个同学。</p>
<p>其后 $n$ 行每行包括 $2$ 个不同的正整数，以一个空格隔开，分别表示编号是 $1$ 的同学最希望相邻的两个同学的编号，编号是 $2$  的同学最希望相邻的两个同学的编号，……，编号是$n$的同学最希望相邻的两个同学的编号。</p>
<h2 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h2><p>一个整数，为最小的总代价。如果无论怎么调整都不能符合每个同学的愿望，则输出 $-1$。</p>
<h2 id="样例-1"><a href="#样例-1" class="headerlink" title="样例 #1"></a>样例 #1</h2><h3 id="样例输入-1"><a href="#样例输入-1" class="headerlink" title="样例输入 #1"></a>样例输入 #1</h3><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">4</span><br><span class="line">3 4</span><br><span class="line">4 3</span><br><span class="line">1 2</span><br><span class="line">1 2</span><br></pre></td></tr></table></figure></div>

<h3 id="样例输出-1"><a href="#样例输出-1" class="headerlink" title="样例输出 #1"></a>样例输出 #1</h3><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">2</span><br></pre></td></tr></table></figure></div>

<h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><ul>
<li>对于 $30%$ 的数据，满足 $n \le 1000$；</li>
<li>对于 $100%$ 的数据，满足 $3\le n  \le  50000$。</li>
</ul>
<p><strong>【题目来源】</strong></p>
<p>NOIP 2005 提高组第三题</p>
<hr>
<p>最后贴上AC代码</p>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="type">long</span> <span class="type">long</span> expect[<span class="number">50005</span>][<span class="number">3</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="type">int</span> mark[<span class="number">500005</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="type">int</span> chair[<span class="number">50005</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="type">int</span> dis[<span class="number">50005</span>] = &#123;<span class="number">0</span>&#125;, sum[<span class="number">50005</span>] = &#123;<span class="number">0</span>&#125;; <span class="comment">// 分别记录距离，相同距离的个数</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    <span class="type">int</span> dsb = n;</span><br><span class="line">    <span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (dsb--)</span><br><span class="line">    &#123;</span><br><span class="line">        ++i;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%lld%lld&quot;</span>, &amp;expect[i][<span class="number">1</span>], &amp;expect[i][<span class="number">2</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= <span class="number">2</span>; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            mark[expect[i][j]]++; <span class="comment">// 被三人以上爱着的情况只是幻想（因为我没有过）</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= n; j++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (mark[j] &gt;= <span class="number">3</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;-1&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>; <span class="comment">// 结束这场戏剧</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> temp;  <span class="comment">// 用于储存</span></span><br><span class="line">    <span class="type">int</span> joker; <span class="comment">// 用于储存小丑（世界上本来没有小丑，爱的人多了也就有了）</span></span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= <span class="number">2</span>; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            temp = expect[i][j];</span><br><span class="line">            joker = <span class="number">-1</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> t = <span class="number">1</span>; t &lt;= <span class="number">2</span>; t++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (expect[temp][t] != i)</span><br><span class="line">                &#123;</span><br><span class="line">                    joker++; <span class="comment">// 如果你喜欢的不喜欢你，那你只是小丑而已</span></span><br><span class="line">                    <span class="keyword">if</span> (joker == <span class="number">1</span>)</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="built_in">printf</span>(<span class="string">&quot;-1&quot;</span>);</span><br><span class="line">                        <span class="keyword">return</span> <span class="number">0</span>; <span class="comment">// 小丑的退场</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= n; j++)</span><br><span class="line">    &#123;</span><br><span class="line">        chair[j] = j;</span><br><span class="line">    &#125;</span><br><span class="line">    chair[<span class="number">2</span>] = expect[<span class="number">1</span>][<span class="number">1</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">3</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (expect[chair[i - <span class="number">1</span>]][<span class="number">1</span>] == chair[i - <span class="number">2</span>])</span><br><span class="line">        &#123;</span><br><span class="line">            chair[i] = expect[chair[i - <span class="number">1</span>]][<span class="number">2</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            chair[i] = expect[chair[i - <span class="number">1</span>]][<span class="number">1</span>];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        dis[chair[i]] = (i - chair[i] + n) % n; <span class="comment">// 顺时针判断距离，+n防止为负（求负数的余数）</span></span><br><span class="line">        sum[dis[chair[i]]]++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (sum[i] &gt;= ans)</span><br><span class="line">        &#123;</span><br><span class="line">            ans = sum[i];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">memset</span>(sum, <span class="number">0</span>, <span class="keyword">sizeof</span>(sum));</span><br><span class="line">    <span class="built_in">memset</span>(dis, <span class="number">0</span>, <span class="keyword">sizeof</span>(dis));</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        dis[chair[i]] = (i - (n - chair[i] + <span class="number">1</span>) + n) % n; <span class="comment">// 逆时针判断距离</span></span><br><span class="line">        sum[dis[chair[i]]]++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (sum[i] &gt;= ans)</span><br><span class="line">        &#123;</span><br><span class="line">            ans = sum[i];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, n - ans);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>; <span class="comment">// 没有人受伤的世界达成了（大老师靠着墙缓缓说道）</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
]]></content>
  </entry>
  <entry>
    <title>Jam 的计数法</title>
    <url>/2023/11/05/jam/</url>
    <content><![CDATA[<h1 id="洛谷【纯纯斯姆消愁】"><a href="#洛谷【纯纯斯姆消愁】" class="headerlink" title="洛谷【纯纯斯姆消愁】"></a>洛谷【纯纯斯姆消愁】</h1><h2 id="Jam-的计数法"><a href="#Jam-的计数法" class="headerlink" title="Jam 的计数法"></a>Jam 的计数法</h2><h1 id="NOIP2006-普及组-Jam-的计数法"><a href="#NOIP2006-普及组-Jam-的计数法" class="headerlink" title="[NOIP2006 普及组] Jam 的计数法"></a>[NOIP2006 普及组] Jam 的计数法</h1><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>Jam 是个喜欢标新立异的科学怪人。他不使用阿拉伯数字计数，而是使用小写英文字母计数，他觉得这样做，会使世界更加丰富多彩。</p>
<p>在他的计数法中，每个数字的位数都是相同的（使用相同个数的字母），英文字母按原先的顺序，排在前面的字母小于排在它后面的字母。我们把这样的“数字”称为 Jam 数字。在 Jam 数字中，每个字母互不相同，而且从左到右是严格递增的。每次，Jam 还指定使用字母的范围，例如，从 $2\sim 10$，表示只能使用 ${b,c,d,e,f,g,h,i,j}$ 这些字母。如果再规定位数为 $5$，那么，紧接在 Jam 数字 $\texttt{bdfij}$ 之后的数字应该是 $\texttt{bdghi}$。（如果我们用 $U$ 、 $V$ 依次表示 Jam 数字 $\texttt{bdfij}$ 与 $\texttt{bdghi}$，则 $U&lt;V$，且不存在 Jam 数字 $P$，使 $U&lt;P&lt;V$）。</p>
<p>你的任务是：对于从文件读入的一个 Jam 数字，按顺序输出紧接在后面的 $5$ 个 Jam 数字，如果后面没有那么多 Jam 数字，那么有几个就输出几个。</p>
<h2 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h2><p>共 $2$ 行。</p>
<p>第 $1$ 行为 $3$ 个正整数 $s, t, w$，用一个空格隔开。</p>
<p>（其中 $s$ 为所使用的最小的字母的序号，$t$ 为所使用的最大的字母的序号。$w$ 为数字的位数，这 $3$ 个数满足：$1\le s&lt;T\le 26,2\le w\le t-s$）</p>
<p>第 $2$ 行为具有 $w$ 个小写字母的字符串，为一个符合要求的 Jam 数字。</p>
<p>所给的数据都是正确的，不必验证。</p>
<h2 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h2><p>最多为 $5$ 行，为紧接在输入的 Jam 数字后面的 $5$ 个 Jam 数字，如果后面没有那么多 Jam 数字，那么有几个就输出几个。每行只输出一个 Jam 数字，是由 $w$ 个小写字母组成的字符串，不要有多余的空格。</p>
<h2 id="样例-1"><a href="#样例-1" class="headerlink" title="样例 #1"></a>样例 #1</h2><h3 id="样例输入-1"><a href="#样例输入-1" class="headerlink" title="样例输入 #1"></a>样例输入 #1</h3><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">2 10 5</span><br><span class="line">  bdfij</span><br></pre></td></tr></table></figure></div>

<h3 id="样例输出-1"><a href="#样例输出-1" class="headerlink" title="样例输出 #1"></a>样例输出 #1</h3><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">bdghi</span><br><span class="line">bdghj</span><br><span class="line">bdgij</span><br><span class="line">bdhij</span><br><span class="line">befgh</span><br></pre></td></tr></table></figure></div>

<h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><p>NOIP 2006 普及组 第三题</p>
<hr>
<p>这道题思路并不难，写这篇题解是为了提供自测是对的，但是提交以后全红的问题一种原因；</p>
<blockquote>
<p>题目说的是提供三个数字，用空格分隔，第二行（这里有一个换行），是三个字母。</p>
</blockquote>
<blockquote>
<p>你如果用的是getchar()去处理掉这个多余的换行，但实际上这里不一定有什么东西（输入流的具体格式取决于操作系统，Windows平台换行符是\r\n两个字符）。稳妥的办法是在scanf里加一个换行符，要求数据流必须要接收完这个换行才行，然后再输入字母就没问题了—（知乎用户星星）</p>
</blockquote>
<p>最后贴上AC代码</p>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">char</span> a[<span class="number">27</span>];</span><br><span class="line"><span class="type">char</span> b[<span class="number">27</span>] = &#123;<span class="string">&#x27;0&#x27;</span>, <span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>, <span class="string">&#x27;d&#x27;</span>, <span class="string">&#x27;e&#x27;</span>, <span class="string">&#x27;f&#x27;</span>, <span class="string">&#x27;g&#x27;</span>, <span class="string">&#x27;h&#x27;</span>, <span class="string">&#x27;i&#x27;</span>, <span class="string">&#x27;j&#x27;</span>, <span class="string">&#x27;k&#x27;</span>, <span class="string">&#x27;l&#x27;</span>, <span class="string">&#x27;m&#x27;</span>, <span class="string">&#x27;n&#x27;</span>, <span class="string">&#x27;o&#x27;</span>, <span class="string">&#x27;p&#x27;</span>, <span class="string">&#x27;q&#x27;</span>, <span class="string">&#x27;r&#x27;</span>, <span class="string">&#x27;s&#x27;</span>, <span class="string">&#x27;t&#x27;</span>, <span class="string">&#x27;u&#x27;</span>, <span class="string">&#x27;v&#x27;</span>, <span class="string">&#x27;w&#x27;</span>, <span class="string">&#x27;x&#x27;</span>, <span class="string">&#x27;y&#x27;</span>, <span class="string">&#x27;z&#x27;</span>&#125;;</span><br><span class="line"><span class="type">int</span> <span class="built_in">map</span>[<span class="number">27</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> s, t, w;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d\n&quot;</span>, &amp;s, &amp;t, &amp;w);</span><br><span class="line">    <span class="comment">//getchar(); // 吃掉换行符</span></span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> temp = w + <span class="number">1</span>; <span class="comment">// 暂存</span></span><br><span class="line">    <span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="type">char</span> arr;</span><br><span class="line">    <span class="keyword">while</span> (temp--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%c&quot;</span>, &amp;arr);</span><br><span class="line">        <span class="keyword">if</span> (arr == <span class="string">&#x27; &#x27;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            temp++;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        ++i;</span><br><span class="line">        a[i] = arr; <span class="comment">// 初始化</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (i = w; i &gt;= <span class="number">1</span>; i--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= t; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (a[i] - <span class="string">&#x27;0&#x27;</span> == b[j] - <span class="string">&#x27;0&#x27;</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">map</span>[i] = j; <span class="comment">// 输出a[i]对应的序号</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">map</span>[w + <span class="number">1</span>] = t + <span class="number">1</span>;</span><br><span class="line">    <span class="type">int</span> count = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (i = w; i &gt;= <span class="number">1</span>;)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">map</span>[i] == t || <span class="built_in">map</span>[i] + <span class="number">1</span> == <span class="built_in">map</span>[i + <span class="number">1</span>])</span><br><span class="line">        &#123;</span><br><span class="line">            --i; <span class="comment">// 如果不能增加，数位-1</span></span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">map</span>[i] + <span class="number">1</span> &lt; <span class="built_in">map</span>[i + <span class="number">1</span>])</span><br><span class="line">        &#123;</span><br><span class="line">            ++<span class="built_in">map</span>[i]; <span class="comment">// 对应的数位上的数+1</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> j = i; j &lt; w; j++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">map</span>[j + <span class="number">1</span>] = <span class="built_in">map</span>[j] + <span class="number">1</span>; <span class="comment">// 后面都要+1</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> q = <span class="number">1</span>; q &lt;= w; q++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (q &lt; w)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>, b[<span class="built_in">map</span>[q]]);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">&quot;%c\n&quot;</span>, b[<span class="built_in">map</span>[q]]);</span><br><span class="line">                    i = w;</span><br><span class="line">                    count++;</span><br><span class="line">                    <span class="keyword">if</span> (count == <span class="number">5</span>)<span class="comment">//输出5个停下</span></span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
]]></content>
  </entry>
</search>
